# docker-compose.yml
version: '3'
services:
  api:
    build: .
    environment:
      PORT: 3000
      NODE_ENV: ${NODE_ENV:-development}
    env_file:
      - .env.compose
    networks:
      - overlay
    ports:
      - 3000:3000
    # restart: on-failure
    depends_on:
      mongodb:
        condition: service_started
      # - rabbitmq
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 10s
      timeout: 5s
      retries: 3
    links:
      - mongodb
      - redis
    # volumes:
    # - ./api:/usr/src/app

  mongodb:
    image: mongo
    ports:
      - 27017:27017
    networks:
      - overlay
    volumes:
      - mongodb_data:/data/db
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - overlay
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
volumes:
  # webapp_node_modules:
  # api_node_modules:
  redis_data: {}
  mongodb_data: {}
networks:
  overlay:
    driver: bridge
